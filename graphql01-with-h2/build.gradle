plugins
{
  id 'java'
  id 'org.springframework.boot' version '2.3.0.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id "com.diffplug.gradle.spotless" version "3.30.0"
  id 'org.sonarqube' version '2.7'
  id 'jacoco'
  id 'org.asciidoctor.jvm.convert' version '3.2.0'
}

group = 'com.mingyuchoo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories
{
  mavenCentral()
}

dependencies
{
  // Spring Boot
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-devtools'
  // GraphQL
  implementation 'com.graphql-java:graphql-java:15.0'
  implementation 'com.graphql-java:graphql-java-extended-scalars:1.0.1'
  implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:2.0'
  implementation 'com.graphql-java-kickstart:graphiql-spring-boot-starter:7.0.1'
  implementation 'com.google.guava:guava:28.1-jre'
  // Lombok
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  // Testing
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation('org.springframework.boot:spring-boot-starter-test')
  {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  // Database
  runtimeOnly 'com.h2database:h2'
}

sonarqube
{
  properties
  {
    property 'sonar.sourceEncoding', 'UTF-8'
  }
}

spotless
{
  java
  {
    importOrder 'java', 'javax', 'org', 'com', ''
    removeUnusedImports()


    googleJavaFormat("1.7").aosp()

    target '**/*.java'

    endWithNewline()
    indentWithSpaces(4)
    trimTrailingWhitespace()
  }
  groovyGradle
  {
    target '**/*.gradle'
    greclipse().configFile('greclipse.properties')
    endWithNewline()
    indentWithSpaces(2)
    trimTrailingWhitespace()
  }
  format 'misc',
  {
    target '**/*.md', '**/.gitignore'
    endWithNewline()
    indentWithSpaces(2)
    trimTrailingWhitespace()
  }
}

jacoco
{
  toolVersion = "0.8.5"
}
test
{
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}
jacocoTestReport
{
  dependsOn test
}
build
{
  dependsOn 'spotlessApply'
}
